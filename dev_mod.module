<?php
/**
 * @file
 * Module file for dev_mod_module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * Through hook_help(), a module can make documentation available to the user
 * for the module as a whole or for specific routes. Where the help appears
 * depends on the $route_name specified.
 *
 * Help text will be displayed in the region designated for help text. Typically
 * this is the 'Help' region which can be found at admin/structure/block.
 *
 * The help text in the first example below, will appear on the simple page at
 * examples/page-example/simple.
 *
 * The second example text will be available on the admin help page (admin/help)
 * in the list of help topics using the name of the module. To specify help in
 * the admin section combine the special route name of 'help.page' with the
 * module's machine name, as in 'help.page.dev_mod' below.
 *
 * See the Help text standard page for the proposed format of help texts.
 *
 * @see https://www.drupal.org/documentation/help-text-standards
 *
 * @see hook_help()
 */
function dev_mod_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'dev_mod_simple':
      // Help text for the simple page registered for this path.
      return t('This is help text for the simple page.');

    case 'help.page.dev_mod':
      // Help text for the admin section, using the module name in the path.
      return t("This is help text created in page example's implementation of hook_help().");
  }
}

// /**
//  * Implementation of hook_views_pre_build().
//  */
// function dev_mod_views_pre_build(&$view) {
//   echo 'dev_mod_views_pre_build';
//   die;
// }

// /**
//  * Implementation of hook_views_post_execute().
//  */
// function dev_mod_views_post_execute(&$view) {
//   echo 'dev_mod_views_post_execute';
//   die;
// }

// /**
//  * Implementation of hook_views_data_alter().
//  */
// function dev_mod_views_data_alter(&$data) {
//   echo 'dev_mod_views_data_alter';
//   die;
// }
